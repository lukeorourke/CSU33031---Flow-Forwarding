# Defines a small topology of 3 routers, 5 networks and 2 endpoints
# docker compose -f compose.yaml --profile routers up -d
# docker compose -f compose.yaml --profile endpoints --profile routers up -d
# docker compose -f compose.yaml --profile routers --profile endpoints down -t 1
services:

  tcpdump:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./pcap:/pcap
    networks:
      stub1:
      stub2:
      trans1:
      trans2:
      trans3:
    privileged: true
    command: tcpdump -i any -w /pcap/capture.pcap

  # 3 routers connecting networks
  router1:
    profiles: ["routers"]
    image: "jvimage"
    build: .
    volumes:
      - .:/compnets
    command: java Server
    stdin_open: true
    tty: true
    environment:
      HOSTNAME: router1
    networks:
      - stub1
      - trans1

  router2:
    profiles: ["routers"]
    image: "jvimage"
    build: .
    volumes:
      - .:/compnets
    command: java Server
    stdin_open: true
    tty: true
    environment:
      HOSTNAME: router2
    networks:
      - trans1
      - trans2

  router3:
    profiles: ["routers"]
    image: "jvimage"
    build: .
    volumes:
      - .:/compnets
    command: java Server
    stdin_open: true
    tty: true
    environment:
      HOSTNAME: router3
    networks:
      - stub2
      - trans2

  # 2 endpoints creating traffic
  # use the following to start these containers in terminals command: /bin/bash
  client1:
    profiles: ["endpoints"]
    image: "jvimage"
    build: .
    volumes:
      - .:/compnets
    command: java Client router1
    stdin_open: true
    tty: true
    depends_on:
      - router1
    environment:
      HOSTNAME: client1
    networks:
      - stub1

  client2:
    profiles: ["endpoints"]
    image: "jvimage"
    build: .
    volumes:
      - .:/compnets
    command: java ClientReceiver router3
    stdin_open: true
    tty: true
    depends_on:
      - router3
    environment:
      HOSTNAME: client2
    networks:
      - stub2


# 2 Stub networks and 3 transient networks
networks:
  stub1:
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.0/24
  stub2:
    ipam:
      driver: default
      config:
        - subnet: 192.168.10.0/24
  trans1:
    ipam:
      driver: default
      config:
        - subnet: 172.21.0.0/24
  trans2:
    ipam:
      driver: default
      config:
        - subnet: 172.22.0.0/24
  trans3:
    ipam:
      driver: default
      config:
        - subnet: 172.23.0.0/24
